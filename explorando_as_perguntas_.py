# -*- coding: utf-8 -*-
"""Explorando  as perguntas:.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NbA4nehxLKlpoVUkXkAclq03vbH2-rVh

# Análise de Dados de Criptomoedas
### Importação de Bibliotecas
### Leitura dos Dados
### Vamos ler os dados de 10 criptomoedas diferentes de arquivos CSV.
"""

# Importação das bibliotecas
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Leitura do conjunto de dados

df1 = pd.read_csv('coin_BinanceCoin.csv')
df2 = pd.read_csv('coin_Cardano.csv')
df3 = pd.read_csv('coin_ChainLink.csv')
df4 = pd.read_csv('coin_CryptocomCoin.csv')
df5 = pd.read_csv('coin_EOS.csv')
df6 = pd.read_csv('coin_Ethereum.csv')
df7 = pd.read_csv('coin_Iota.csv')
df8 = pd.read_csv('coin_NEM.csv')
df9 = pd.read_csv('coin_Tron.csv')
df10 = pd.read_csv('coin_USDCoin.csv')

df = pd.concat([ df1, df2, df3 ,df4, df5, df6, df7, df8, df9, df10])

"""# Pré-processamento
### Vamos concatenar todos os dataframes em um único dataframe para facilitar a análise.
"""

df = pd.concat([ df1, df2, df3 ,df4, df5, df6, df7, df8, df9, df10], axis=1)
print(df)

"""# Análise Exploratória
### Primeiro vamos analisar algumas estatísticas descritivas básicas dos dados.
"""

# Análise do comportamento geral dos valores
print(df.describe())

"""# Podemos ver a média, desvio padrão, valores mínimos e máximos, quartis etc.
### Isso nos dá uma visão geral da distribuição dos dados.

### Agora vamos analisar a média dos valores para cada criptomoeda:
"""

# Cálculo da média dos valores
mean_values = df.mean()
print(mean_values)

"""# Isso nos mostra os valores médios de preço fechamento para cada cripto.

### Análise do Comportamento Anual
Vamos agregar os dados por ano para analisar variações anuais.
"""

print(df)

# Exibir as primeiras linhas do DataFrame para verificar as colunas disponíveis
print(df.head())

# Calcular a matriz de correlação usando a coluna 'col_4' como os preços de fechamento
correlation_matrix = df.pivot_table(index='col_3', columns='col_1', values='col_4').corr()

# Visualizar a matriz de correlação
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Matriz de Correlação entre Criptomoedas')
plt.show()



# Encontrar a moeda com a menor taxa de retorno média
moeda_menos_interessante = average_returns.idxmin()

df['Date'] = pd.to_datetime(df['Date'])

df['Date']
df['Ano'] = pd.to_datetime(df['Date']).dt.year

df = df.rename(columns=str.lower)

df['Date']

df2 = df.loc[:, []]
df2['date'] = df['Date']

ano = pd.to_datetime(df2['date']).dt.year.to_frame('ano')
df2 = df2.join(ano)

df['Ano_date'] = pd.to_datetime(df['Date']).dt.year

ano = pd.to_datetime(df['Date']).dt.year.to_frame('Ano')
df = df.join(ano)

# Os resultados estão sendo armazenados nas variáveis max_drop e max_increase.
df['Ano'] = pd.to_datetime(df['Date']).dt.year
df['Variation'] = df['Close'].pct_change()

max_drop = df.groupby('Ano')['Variation'].min()
max_increase = df.groupby('Ano')['Variation'].max()

"""# 777777777777777777777777777777777777777777777777777777777777777"""

# imprimindo as variáveis para visualizar os resultados.
print("Maior queda por ano:")
print(max_drop)

# imprimindo as variáveis para visualizar os resultados.
print("\nMaior aumento por ano:")
print(max_increase)

df = pd.concat([df1, df2, df3, df4, df5, df6, df7, df8, df9, df10], ignore_index=True)
print(df)

"""# **2 Valores Médios das Criptomoedas**

Agora, vamos calcular os valores médios para todas as criptomoedas ao longo do período analisado.

"""

df['Ano'] = pd.to_datetime(df['Date']).dt.year

"""# Agora podemos calcular a maior queda e maior aumento por ano:

### Isso nos permite ver picos e vales no comportamento das criptomoedas ao longo do tempo.
"""

df = df.reset_index(drop=True)

df.columns = [f'col_{i}' for i in range(len(df.columns))]

df['col_6'] = pd.to_datetime(df['col_6'])

dates = df['col_6']
dates = pd.to_datetime(dates)

df_date['Date'] = pd.to_datetime(df_date['Date'])

df['Variation'] = df['Close'].pct_change()

max_drop = df.groupby('Ano')['Variation'].min()
max_increase = df.groupby('Ano')['Variation'].max()

print("Maior queda por ano:")
print(max_drop)

print("\nMaior aumento por ano:")
print(max_increase)

df2 = pd.DataFrame()
df2['dates'] = pd.to_datetime(df['Date'])

df2['dates'] = pd.to_datetime(df['Date'].copy())

df2['dates'] = pd.to_datetime(df['Date'].fillna('').copy())

# seja a coluna que contém a data
df[''] = pd.to_datetime(df['Date']).dt.day_name()
mean_by_weekday = df.groupby('BinanceCoin')['Close'].mean()

duplicates = df[df.duplicated(subset=['Date'])]
print(duplicates)





df = df.drop_duplicates(subset=['Date'], keep='first')

valorizacao_media = df.groupby('')['Var'].mean()

df['Date'] = pd.to_datetime(df['Date'])
print(df)

print(df.groupby('Marketcap')['Var'].mean().sort_values(ascending=False))

df['Dia'] = pd.to_datetime(df['Date']).dt.dayofweek

df.groupby('Dia').mean()['Close'].plot(kind='bar')

print(df.groupby('Coin')['Var'].mean().sort_values())

valorizacao_media = df.groupby('Coin')['Var'].mean()

print(valorizacao_media.sort_values(ascending=False))

print(valorizacao_media.sort_values())